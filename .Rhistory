offsets <- seq(0, 80, by = 20)  # Adjust as needed
# Fetch and bind all pages
all_books <- map_dfr(offsets, fetch_page)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
# API key and endpoint
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
# Function to fetch one page
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
# Offsets for pages (e.g. 0 to 100 results)
offsets <- seq(0, 80, by = 20)  # Adjust as needed
# Fetch and bind all pages
all_books <- map_dfr(offsets, fetch_page)
# Check result
nrow(all_books)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
# API key and endpoint
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
# Function to fetch one page
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
offsets <- seq(0, 100, by = 20)  # This fetches 100 books
all_books <- map_dfr(offsets, fetch_page)
# Check how many were retrieved
nrow(all_books)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
# API key and endpoint
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
# Function to fetch one page
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
offsets <- seq(0, 100, by = 20)  # This fetches 100 books
all_books <- map_dfr(offsets, fetch_page)
# Check how many were retrieved
nrow(all_books)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
# API key and endpoint
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
if (!is.null(result$results) && length(result$results) > 0) {
return(result$results)
} else {
return(NULL)
}
}
offsets <- seq(0, 100, by = 20)  # This fetches 100 books
all_books <- map_dfr(offsets, fetch_page)
# Check how many were retrieved
nrow(all_books)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
# API key and endpoint
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
offsets <- seq(0, 100, by = 20)  # This fetches 100 books
all_books <- map_dfr(offsets, fetch_page)
# Check how many were retrieved
nrow(all_books)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
# API key and endpoint
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
if (!is.null(result$results) && length(result$results) > 0) {
return(result$results)
} else {
return(NULL)
}
}
offsets <- seq(0, 100, by = 20)  # This fetches 100 books
all_books <- map_dfr(offsets, fetch_page)
# Check how many were retrieved
nrow(all_books)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
# API key and endpoint
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
if (!is.null(result$results) && length(result$results) > 0) {
return(result$results)
} else {
return(NULL)
}
}
offsets <- seq(0, 100, by = 20)  # This fetches 100 books
all_books <- map_dfr(offsets, fetch_page)
# Check how many were retrieved
nrow(all_books)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
# API key and endpoint
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
if (!is.null(result$results) && length(result$results) > 0) {
return(result$results)
} else {
return(NULL)
}
}
offsets <- seq(0, 100, by = 20)  # This fetches 100 books
all_books <- map_dfr(offsets, fetch_page)
# Check how many were retrieved
nrow(all_books)
View(all_books)
library(dplyr)
top_authors <- all_books %>%
group_by(author) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_authors, 10)
library(dplyr)
top_authors <- all_books %>%
group_by(author) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_authors, 10)
top_publishers <- all_books %>%
group_by(publisher) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_publishers, 10)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)  # This fetches 100 books
all_books <- map_dfr(offsets, fetch_page)
# Check how many were retrieved
nrow(all_books)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)  # This fetches 100 books
all_books <- map_dfr(offsets, fetch_page)
# Check how many were retrieved
nrow(all_books)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)  # This fetches 100 books
all_books <- map_dfr(offsets, fetch_page)
# Check how many were retrieved
nrow(all_books)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)
all_books <- map_dfr(offsets, fetch_page)
library(dplyr)
top_authors <- all_books %>%
group_by(author) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_authors, 10)
top_publishers <- all_books %>%
group_by(publisher) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_publishers, 10)
View(all_books)
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)
all_books <- map_dfr(offsets, fetch_page)
View(all_books)
library(dplyr)
top_authors <- all_books %>%
group_by(author) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_authors, 10)
top_publishers <- all_books %>%
group_by(publisher) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_publishers, 10)
library(dplyr)
top_authors <- all_books %>%
group_by(author) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_authors, 5)
top_publishers <- all_books %>%
group_by(publisher) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_publishers, 5)
install.packages("httr")
install.packages("jsonlite")
install.packages("dplyr")
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)
all_books <- map_dfr(offsets, fetch_page)
library(dplyr)
top_authors <- all_books %>%
group_by(author) %>%
install.packages("jsonlite")
install.packages("dplyr")
arrange(desc(book_count))
install.packages("httr")
install.packages("dplyr")
install.packages("httr", repos = "https://cloud.r-project.org")
install.packages("jsonlite")
install.packages("dplyr")
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)
all_books <- map_dfr(offsets, fetch_page)
library(dplyr)
top_authors <- all_books %>%
group_by(author) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_authors, 5)
top_publishers <- all_books %>%
group_by(publisher) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_publishers, 5)
install.packages("httr", repos = "https://cloud.r-project.org")
install.packages("jsonlite")
install.packages("dplyr")
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)
all_books <- map_dfr(offsets, fetch_page)
print(all_books)
library(dplyr)
top_authors <- all_books %>%
group_by(author) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)
all_books <- map_dfr(offsets, fetch_page)
print(all_books)
Sys.setenv(API = "r9u9wCeJkovaSFtpJ3EEW7mmDnA1m5K1")
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)
all_books <- map_dfr(offsets, fetch_page)
print(all_books)
library(dplyr)
top_authors <- all_books %>%
group_by(author) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_authors, 5)
top_publishers <- all_books %>%
group_by(publisher) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_publishers, 5)
install.packages("httr", repos = "https://cloud.r-project.org")
install.packages("jsonlite", repos = "https://cloud.r-project.org/")
install.packages("jsonlite")
install.packages("dplyr")
install.packages("httr", repos = "https://cloud.r-project.org")
options(repos = c(CRAN = "https://cloud.r-project.org/"))
install.packages("jsonlite")
install.packages("dplyr")
Sys.setenv(API = "r9u9wCeJkovaSFtpJ3EEW7mmDnA1m5K1")
install.packages("httr", repos = "https://cloud.r-project.org")
options(repos = c(CRAN = "https://cloud.r-project.org/"))
install.packages("jsonlite")
install.packages("dplyr")
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)
all_books <- map_dfr(offsets, fetch_page)
print(all_books)
library(dplyr)
top_authors <- all_books %>%
group_by(author) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_authors, 5)
top_publishers <- all_books %>%
group_by(publisher) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_publishers, 5)
install.packages("httr", repos = "https://cloud.r-project.org")
options(repos = c(CRAN = "https://cloud.r-project.org/"))
install.packages("jsonlite")
install.packages("dplyr")
library(httr)
library(jsonlite)
library(dplyr)
library(purrr)
api_key <- Sys.getenv("API")
url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json"
fetch_page <- function(offset = 0) {
response <- GET(url, query = list(
`api-key` = api_key,
offset = offset
))
result <- fromJSON(content(response, as = "text", encoding = "UTF-8"))
return(result$results)
}
offsets <- seq(0, 100, by = 20)
all_books <- map_dfr(offsets, fetch_page)
print(all_books)
install.packages("jsonlite")
install.packages("dplyr")
install.packages("httr", repos = "https://cloud.r-project.org")
library(dplyr)
top_authors <- all_books %>%
group_by(author) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_authors, 5)
top_publishers <- all_books %>%
group_by(publisher) %>%
summarise(book_count = n()) %>%
arrange(desc(book_count))
head(top_publishers, 5)
install.packages("httr", repos = "https://cloud.r-project.org")
